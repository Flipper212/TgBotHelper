import datetime
from lessons_and_time import lesson_time_start, lesson_time_end, week, lesson_time_end_str


def main():
    now_time = str(datetime.datetime.now().time())
    hour = int(now_time.split(":")[0])
    minute = int(now_time.split(":")[1])
    index = 0  # –ù–æ–º–µ—Ä —É—Ä–æ–∫—É

    is_start = True  # –ß–∏ –ø–æ—á–∞–ª–∏—Å—è —É—Ä–æ–∫–∏
    is_end = False  # –ß–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—è —É—Ä–æ–∫–∏
    is_work_day = True  # –ß–∏ —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å
    is_last = False  # –ß–∏ —Ü–µ –æ—Å—Ç–∞–Ω–Ω—ñ–π —É—Ä–æ–∫
    count_day = datetime.datetime.now().isoweekday()  # –ø–æ—Ä—è–¥–æ–∫ –¥–Ω—è
    int_time = int(str(hour) + str(minute))

    #  –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å
    if count_day in (6, 7):
        return [False, "not work day"]

    if int_time >= 1430 and 3 <= count_day <= 5 or int_time >= 1520 and 1 <= count_day <= 2:
        return [False, "lessons is over"]
    elif int_time < 830:
        lesson_end = lesson_time_start[0]
        is_start = False
    elif 830 <= int_time < 1430 and 2 < count_day < 6 or 830 <= int_time < 1520 and 0 < count_day < 3:
        while int(lesson_time_end[index]) < int_time:
            index += 1

    if is_start:
        lesson_end = str(lesson_time_end[index])

    f_hour = int(lesson_time_end_str[index].split(":")[0])
    f_minute = int(lesson_time_end_str[index].split(":")[1])
    print(f_hour, f_minute)
    if week[count_day+1][index] == week[count_day][-1]:
        is_last = True

    result_str = (f_hour * 3600 + f_minute * 60 - int(hour) * 3600 - int(minute) * 60)//60

    return [result_str, week[count_day-1][index], is_start, is_end, is_last, is_work_day]


main_return = main()


def make_result():
    if main_return[0] is False:
        if main_return[1] == "not work day":
            return "<b>–°—å–æ–≥–æ–¥–Ω—ñ –Ω–µ –º–∞—î —É—Ä–æ–∫—ñ–≤</b>ü•∞"
        elif main_return[1] == "lessons is over":
            return "<b>–£—Ä–æ–∫–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å</b>ü•∞"

    elif main_return[2]:  # –Ø–∫—â–æ –ø–æ—á–∞–ª–∏—Å—å —É—Ä–æ–∫–∏
        if main_return[0] > 40 and main_return[4] is False:
            return f"<b>{main_return[1]}</b> –ø–æ—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ <b>{main_return[0] - 40} —Ö–≤</b>"
        elif main_return[4] is False:
            return f"–£—Ä–æ–∫ –∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ <b>{main_return[0]} —Ö–≤</b>, –Ω–∞—Å—Ç—É–ø–Ω–∏–π <b>{main_return[1]}</b>"
        elif main_return[4]:
            return f"–£—Ä–æ–∫ –∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ <b>{main_return[0]} —Ö–≤</b>, <b>–¶–µ –æ—Å—Ç–∞–Ω–Ω—ñ–π –£—Ä–æ–∫ü•∞</b>"

    elif main_return[2] is False:
        return f"<b>{main_return[1]}</b> –ø–æ—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ <b>{main_return[0] - 40} —Ö–≤</b>"

    #  result_str, week[count_day][index], is_start, is_end, is_last, is_work_day
